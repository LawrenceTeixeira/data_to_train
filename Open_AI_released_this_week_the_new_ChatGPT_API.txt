Skip to content

Tech News & Insights by Lawrence Teixeira

Menu

Blog BotGPT About Contact

LinkedIn Twitter

Open AI released this week the new ChatGPT API

OpenAI has introduced two new APIs to its suite of powerful language models this week. ChatGPT has been making waves in the market these past few months since its release to the public in November 2022 by Open AI. Now, any company can incorporate ChatGPT features into their applications. Using the API is very simple and will revolutionize how we know artificial intelligence today.

What is ChatGPT?

ChatGPT is an API (Application Programming Interface) developed by OpenAI, which is designed to facilitate the creation of chatbots that can engage in natural language conversations with users. ChatGPT is based on the GPT (Generative Pre-trained Transformer) family of language models, which have been pre-trained on vast amounts of text data and can generate high-quality text that closely mimics human writing.

ChatGPT aims to make it easier for developers to create chatbots that can understand and respond to natural language queries. The API can be fine-tuned for specific use cases, such as customer service or sales, and developers can integrate it into their applications with just a few lines of code.

ChatGPT works by taking in user input, such as a question or statement, and generating a response designed to mimic natural language conversation. The API uses machine learning to process and understand the input, allowing it to respond in a relevant and engaging way.

Overall, ChatGPT represents a significant step forward in developing conversational AI. By providing developers with a powerful and flexible tool for creating chatbots, OpenAI is making it easier for businesses and organizations to engage with their customers and users more naturally and intuitively.

What is the ChatGPT API?

The ChaGPT API is an extension of the GPT (Generative Pre-trained Transformer) family of language models. The GPT models are pre-trained on massive amounts of text data, allowing them to generate high-quality text with a natural language understanding often indistinguishable from the human-written text.

The ChaGPT API is designed to handle conversations, making it an excellent tool for building chatbots. With ChaGPT, developers can create chatbots that can respond to user input in a natural, conversational way. The API is flexible and can be fine-tuned for specific use cases, such as customer service or sales.

How to use the API?

You can integrate the ChatGPT features into your solution with a few lines. Follow an example code:

Pythonimport openai openai.api_key = "PUT YOUR OPEN AI KEY HERE"

def ChatGPT(question): response = openai.ChatCompletion.create( model="gpt-3.5-turbo", messages=[ {"role": "system", "content": "You are a helpful assistant."}, {"role": "user", "content": question} ] ) return response["choices"][0]["message"]["content"]

print( ChatGPT("How to create a python code to analyze the increasing of the population arround the world?") )

Take a look at the ChatGPT API result:

One approach to analyzing the increase of population around the world in Python is to use data from the United Nations World Population Prospects. Here's an example of how to load and analyze this data in Python:

First, you will need to install the pandas package:

```python !pip install pandas ```

Next, you can load the data into a pandas DataFrame:

```python import pandas as pd

# Load the data from a CSV file data = pd.read_csv('https://population.un.org/wpp/DVD/Files/1_Indicators%20(Standard)/CSV_FILES/WPP2019_TotalPopulationBySex.csv')

# Print the first few rows of the data print(data.head()) ```

This will load the data into a pandas DataFrame and print the first few rows of the data:

``` LocID Location VarID Variant ... PopFemale PopTotal PopDensity PopPyramid 0 4 Afghanistan 2 Medium ... 19594.381 38928.35 54.422 0-24 1 4 Afghanistan 2 Medium ... 20179.675 40341.77 56.937 0-24 2 4 Afghanistan 2 Medium ... 20778.593 41754.96 59.661 0-24 3 4 Afghanistan 2 Medium ... 21415.724 43203.14 62.529 0-24 4 4 Afghanistan 2 Medium ... 22099.928 44701.23 65.484 0-24

[5 rows x 14 columns] ```

The `data` DataFrame contains the population data for all countries and regions of the world from 1950 to 2100, broken down by sex and age group.

To analyze the increase of population over time, you can use pandas' grouping and aggregation functions. For example, to calculate the total population by year, you can group the data by year and sum the population columns:

```python # Group the data by year and sum the population columns pop_by_year = data.groupby('Time')[['PopTotal', 'PopMale', 'PopFemale']].sum()

# Print the first few rows of the data print(pop_by_year.head()) ```

This will output:

``` PopTotal PopMale PopFemale Time 1950 2.536542e+09 1.278728e+09 1.257814e+09 1951 2.584034e+09 1.303461e+09 1.280572e+09 1952 2.630584e+09 1.328990e+09 1.301594e+09 1953 2.676380e+09 1.354295e+09 1.322086e+09 1954 2.721384e+09 1.379313e+09 1.342071e+09 ```

You can then plot the total population over time using the matplotlib package:

```python import matplotlib.pyplot as plt

# Create a line plot of total population over time plt.plot(pop_by_year.index, pop_by_year['PopTotal'])

# Set the plot title and axis labels plt.title('World Population') plt.xlabel('Year') plt.ylabel('Population (billions)')

# Show the plot plt.show() ```

This will plot the total population over time:

![World Population plot](https://i.imgur.com/XXcRVit.png)

You can also calculate the percentage increase in population from year to year using pandas' `pct_change()` function:

```python # Calculate the percentage increase in population from year to year pop_growth = pop_by_year.pct_change() * 100

# Print the first few rows of the data print(pop_growth.head()) ```

This will output:

``` PopTotal PopMale PopFemale Time 1950 NaN NaN NaN 1951 1.854079 1.934514 1.814192 1952 1.798119 1.952587 1.658901 1953 1.735834 1.900590 1.556621 1954 1.686583 1.845293 1.512103 ```

You can then plot the percentage increase in population over time:

```python # Create a line plot of percentage population growth over time plt.plot(pop_growth.index, pop_growth['PopTotal'])

# Set the plot title and axis labels plt.title('World Population Growth') plt.xlabel('Year') plt.ylabel('Population growth (%)')

# Show the plot plt.show() ```

This will plot the percentage increase in population over time:

![World Population Growth plot](https://i.imgur.com/E18reRf.png)

This analysis can be extended in many ways depending on the specific questions you are interested in.

They also released the Whisper API. Whisper can transcribe speech to text in any language.

Follow an example:

Letâ€™s test to extract the text with Wisper from this video:

First, you have to extract only the audio:

Python!pip install pytube

import pytube as pt

yt = pt.YouTube("https://www.youtube.com/watch?v=XxIfSkkyAaQ") stream = yt.streams.filter(only_audio=True)[0] stream.download(filename="audio_ChatGPTAPI.mp3")

Now, you have to use the API to transcribe the audio:

Pythonimport openai

file = open("/path/to/file/audio_ChatGPTAPI.mp3", "rb") transcription = openai.Audio.transcribe("whisper-1", file)

print(transcription)

Take a look at the result of the Whisper API result:

{ "text": "OpenAI recently released the API of chatgpt. This is an API that calls gpt 3.5 turbo, which is the same model used in the chatgpt product. If you already know how to use the OpenAI API in Python, learning how to use the chatgpt API should be simple, but there are still some concepts that are exclusive to this API, and we'll learn these concepts in this video. Okay, let's explore all the things we can do with the chatgpt API in Python. Before we start with this video, I'd like to thank Medium for supporting me as a content creator. Medium is a platform where you can find Python tutorials, data science guides, and more. You can get unlimited access to every guide on Medium for $5 a month using the link in the description. All right, to start working with the chatgpt API, we have to go to our OpenAI account and create a new secret key. So first, we have to go to this website that I'm going to leave the link on the description, and then we have to go to the view API keys option. And here, what we have to do is create a new secret key in case you don't have one. So in this case, I have one, and I'm going to copy the key I have, and then we can start working with the API. So now I'm going here to Jupyter Notebooks, and we can start working with this API. And the first thing we have to do is install the OpenAI API. So chatgpt, the API of chatgpt or the endpoint, is inside of this library, and we have to install it. So we write pip install OpenAI, and then we get, in my case, a requirement already satisfied because I already have this library. But in your case, you're going to install this library. And then what we have to do is go to the documentation of chatgpt API, which I'm going to leave in the description, and we have to copy the code snippet that is here. So you can copy from my GitHub that I'm going to leave also in the description, or you can go to the documentation. So this is going to be our starting point. And before you run this code, you have to make sure that here in this variable OpenAI.API underscore key, you type your secret key that we generated before. So you type here your key, and well, you're good to go. And here's something important you need to know is that the main input is the messages parameter. So this one. And this messages parameter must be an array of message objects where each object has a role. You can see here in this case, the role is the user. And also we have the content. And this content is basically the content of the message. Okay. There are three roles. There are besides user, we have also the admin role and also the assistant role. And we're going to see that later. And now I'm going to test this with a simple message here in the content. Here I'm going to leave the role as user as it was by default. And here I'm going to change that content of the message. So I don't want to write hello, but I want to type this. So tell the world about the chatgpt API in the style of a pirate. So if I run this, we can see that we're going to get something similar that we'll get with chatgpt. But before running this, I'm going to delete this, this quote. And now I'm going to run and we're going to get a message similar to chatgpt. So here we have a dictionary with two elements, the content and the role. And here I only want the content. This is the text that we're going to get. We will get if we were using chatgpt. And if I write content, I'm going to get only the content. So only the text. So here's the text. So this is an introduction to the chatgpt API in the style of a pirate. And well, this is the message or the response. And if we go to the website to chatgpt, we're going to see that we're going to get something similar. So if I go here, and I go to chatgpt, and I write to the world about the chatgpt API in the style of a pirate, we can see we get this message in the style of a pirate. So we get this ahojder and then all the things that a pirate will say. And we get here the same. So we get a similar message. So basically, this response is what we will get with chatgpt, but without all this fancy interface. So we're only getting the text. Okay, now to interact with this API, as if we were working with chatgpt, we can make some modifications to the code. For example, we can use that input function to interact with with this API in a different way, as if we were working with chatgpt, like in the website. So here I can use that input. And I can, I can write, for example, users. So we are the users. And this is what we're going to ask chatgpt. And this is going to be my content. So here content. And instead of writing this, I'm going just to write content equal to content. And this is going to be the message that is going to change based on the input we insert, then instead of just printing this message, I'm going to create a variable called chat underscore response. And this is going to be my response, but we're gonna put it like in a chatgpt style. So here, I'm going to print this. And with this, we can recognize which is the user request and which is that chatgpt response. So let's try it out. Here, I'm going to press Ctrl Enter to run this. Okay, and here I'm going to type who was the first man on the moon. So if I press Enter, we get here the answer. And well, this is like in a chatgpt style, we get an input where we can type any question or request we have. And then we get the answer by chatgpt. And now let's see the roles that are going to change the way we interact with chatgpt. Okay, now let's see the system role. The system role helps set the behavior of the system. And this is different from that user role, because in the user role, we only give instructions to the system. But here, in the system role, we can control how the system behaves. For example, here, I add two different behaviors. And to do this, first, we have to use the messages object. It is the same messages object we had before. This is the same that we had here. But in this case, this is for the system role. And here I added two just to show you different ways to use this, this role. But usually you only have only one behavior for the system, or sorry for the system. And well, here in the first one, I'm saying you're a kind, helpful assistant. And well, in this case, we're telling the system to be as helpful as possible. And in the second one, is something I came up with. And it's something like you're a recruiter who asks tough interview questions. So for example, this second role, we can interact with chat GPT as if it was a job interview. So it's something like chat GPT is going to be the recruiter who asks questions, and we're going to be the candidate who answers all the questions. So let's use this, this second content. And now let's include this system role in our code. So to do this, I'm going to copy the code I had before, and I'm going to paste it here. And as you can see, we have two messages variable, one with a system role and the other with that user role. And what I'm going to do is just append one list into the other. So to do this, I'm going to create or write messages that append. And then I'm going to put this dictionary inside my variables. So here I write append, and now I put this inside. And after doing this, I'm just have to delete this and write messages equal to messages. And with this, we have that system role and also that user role in our code. Now I only have to put this content equal to input at the beginning. And with this, everything is ready. And now we can run this code. So first, I'm going to run the messages here, the list I have, and then I'm going to run the code we have before. And here is asking me to insert something. So here, I'm going to write just hi. And after this, we're going to see that the behavior of chat GPT change. So now is telling us Hello, welcome to the interview. Are you ready to get started? And this happened because we changed the behavior of the system. Now the behavior is set to you're a recruiter who asks tough interview questions. And well, here the conversation finished because this doesn't have a while loop. But here, I'm going to add a while loop. So I'm going to write while true. And then I'm going to run again. So here, I'm going to run again. And let's see how the conversation goes. So first, I write hi. And then this is going to give me the answer that well, welcome to the interview. And then can you tell me about a work related challenge that you overcame? So here, I can say, I had problems in public presentations. And I overcame it with practice. So I'm going to write this. And let's see how the conversation goes. And now it's asking me to add some specific actions I did to improve my presentation skills. So now you can see that chatgp is acting like a recruiter in a job interview. And this is thanks to this behavior we added in the system role. And well, now something that you need to know is that there is another role, which is the assistant role. And this role is very important. And it's important because sometimes here, for example, in this chat that is still on, if we write no, what we're going to see is that chatgpt is not able to remember the conversation we had. So it cannot read that preview responses. So here, for example, I type no. And what we got is thanks for sharing that. And actually, I didn't share anything. I just wrote no. And well, it's telling me to continue with something else. But as you can see, chatgpt is not able to remember what we said before. And if we add an assistant role, with this, we can make sure that we build a conversation history where chatgpt is able to remember the previous responses. So now let's do this. Let's create an assistant role. Okay, as I mentioned before, the system role is used to store prior responses. So by storing prior responses, we can build a conversation history that will come in handy when user instructions refer to prior messages. So here, to create this assistant role, we have to create again this dictionary. And then in the role, we have to type assistant, as you can see here. And then in the content, we have to introduce that chat response. And to understand this much better, I'm going to copy the previous code, and I'm going to paste it here. So here, the chat response is this one, this chat response that has that content of the response given by chatgpt. So here, I'm going to copy this code, and I'm going to paste it here. And what I'm going to do here to include this assistant role is to append this into that messages list. So here, I'm going to write messages.append() and then the parentheses. And with this, we integrated that assistant role to our little script. And here, for you to see the big picture of all of this, I'm going to copy also that assistant role. And well, it's here, the assistant role. I'm going to delete this first line of code. And well, this is the big picture. So we have the assistant role. This sets the behavior of the assistant. Then we have the user, which sets the instructions. And finally, we have the assistant, which stores all the responses. And with this, we can have a proper conversation with chatgpt. Here, before I run this code, I'm going to customize a little bit more the behavior of the assistant in the assistant role. And here, I'm going to type this. So it's basically the same, but here I'm adding, you ask one question or one new question after my response. So to simulate a job interview. And well, now that this is ready, here, I'm going to make sure that everything is right. And well, everything is perfect now. So here, I'm going to run these two blocks. And then I'm going to type hi, so we can start with that interview. So are you ready for that interview? Yes. So here, it's going to ask me a question. Let's get started. Can you tell me about your previous work experience? And well, I worked at Google, I'm going to say and well, now it tells me that's great. Can you tell me your role and responsibilities? And I can say, I was a software engineer. And well, now that conversation is going to keep going. And chatgpt is going to ask me more and more questions. And in this case, it remembers the previous responses I gave. So for example, I said I worked at Google. And here it's telling me the responsibilities I had at Google. And in the next response is also mentioning Google again. And I think if I mentioned the project that is asking here, for example, if I write, I had a credit card fraud detection project, and I overcame it with teamwork, I don't know, something like this, then it's going to ask me about this project. So now it mentions teamwork, which I said in my previous response. And now it's asking me more about this project. So with this, we can see that our assistant is storing our previous responses. And with this, we're building a conversation history that keeps the conversation going without losing quality in the responses. And that's pretty much it. Those are the three those are the three modes that you have to know to work with the chatgpt API. And in case you wonder about the pricing of the chatgpt API, well, it's priced at 0.002 per 1000 tokens, which is 10 times cheaper than the other models like gpt 3.5. And well, it is another reason why I wouldn't pay $20 for a chatgpt plus subscription. And well, in case you're interested why I am going to cancel my chatgpt plus subscription, you can watch this video where I explain why I regret paying $20 for a chatgpt plus subscription. And well, that's it. I'll see you on the next video." }

OpenAIâ€™s ChaGPT and Whisper APIs are a significant step forward for conversational AI. By making it easy for developers to build chatbots and voice assistants, these APIs have the potential to revolutionize the way we interact with technology. With the power of these language models at their fingertips, developers can create more intuitive and engaging user experiences than ever before.

Follow the official ChatGPT API post:

https://openai.com/blog/introducing-chatgpt-and-whisper-apis

Regarding ChatGPT, I would like to share the project Iâ€™m developing using the official ChatGPT API. Itâ€™s just the beginning!

BotGPT

BotGPT is a new service product that leverages the power of artificial intelligence to provide a personalized chat experience to customers through WhatsApp. Powered by the large language model, ChatGPT, BotGPT is designed to understand natural language and provide relevant responses to customer inquiries in real time.

One of the key benefits of using BotGPT is its ability to provide personalized recommendations to customers based on their preferences and past interactions. BotGPT can suggest products, services, or solutions tailored to each customerâ€™s needs by analyzing customer data. This personalized approach helps to enhance the overall customer experience, leading to increased customer satisfaction and loyalty.

Unleash the potential of GPT-4 with BotGPT today by clicking this link and embarking on two days, cost-free journey into conversational AI without any payment information. Begin your adventure by clicking here. And finally, to make the monthly subscription after seven days, click here.

Once subscribed after seven days, you can manage or cancel your subscription anytime via this link.

Should you encounter any obstacles, you can directly add the BotGPT WhatsApp: +1 (205) 754-6921 number to your phone.

If you have any questions or suggestions, please get in touch using this link.

Thatâ€™s it for today!

Share this:

Click to share on LinkedIn (Opens in new window) Click to share on Twitter (Opens in new window) Click to email a link to a friend (Opens in new window) Click to share on Facebook (Opens in new window) Click to print (Opens in new window)

Like this:

Like Loading...

Author: Lawrence Teixeira

Lawrence is a veteran senior technology delivery lead with over 17 years of experience as a CTO and CIO in intellectual property companies. He has experience in both Agile and Waterfall development methodologies. He has a solid technical background in IT and excellent management skills with over 25 years in the area, delivering advanced systems projects and data analytics. Lawrence has hands-on experience building and deploying intellectual property systems, business intelligence, data warehousing, and building bots for RPA and data collection. He also knows PMP, Agile, Scrum, DevOps, ITIL, CMMI, and ISO/IEC 27001. View all posts by Lawrence Teixeira

Author Lawrence TeixeiraPosted on March 5, 2023April 1, 2023Categories AI, ChatCPT, NLP, TechTags AI, ChatGPT, ChatGPT API, NLP, Open AI, Open AI Whisper

Leave a Reply Cancel reply

Post navigation Previous Previous post: How to Implementing Agile Practices in Legal Firms

Search Search

Agile

AI

Business

ChatCPT

Data Analytics

Data Governance

NLP

Power BI

Python

Tech

March 2023 February 2023 January 2023 December 2022 November 2022 October 2022

How can you earn money with ChatGPT and Power BI? January 20, 2023

OpenAI Whisper â€“ The Future of Conversational AI November 2, 2022

Twitter Sentiment Analysis using Open AI and Power BI October 10, 2022

Type your emailâ€¦

Subscribe

Blog BotGPT About Contact

LinkedIn Twitter

Tech News & Insights

 

Loading Comments...

 

Write a Comment...

Email (Required)

Name (Required)

Website

%d bloggers like this: